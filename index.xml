<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pedro's Blog</title><link>https://pedrovhb.com/</link><description>Recent content on Pedro's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>pedrovhb@gmail.com (Pedro Batista)</managingEditor><webMaster>pedrovhb@gmail.com (Pedro Batista)</webMaster><lastBuildDate>Thu, 18 Nov 2021 16:44:35 -0300</lastBuildDate><atom:link href="https://pedrovhb.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Sometimes you gotta fix it yourself</title><link>https://pedrovhb.com/posts/fix_it_yourself/</link><pubDate>Thu, 18 Nov 2021 16:44:35 -0300</pubDate><author>pedrovhb@gmail.com (Pedro Batista)</author><guid>https://pedrovhb.com/posts/fix_it_yourself/</guid><description>I&amp;rsquo;m a huge motorsports fan, and this weekend I had the privilege of attending the 2021 SÃ£o Paulo Grand Prix. It was an amazing Formula 1 race in the highly regarded Interlagos circuit, and it&amp;rsquo;ll go down as one of the classic races of the sport, with a performance from Lewis Hamilton that was nothing short of breathtaking.
COVID is still a concern in sports events such as this, and reasonably enough, F1 management elected to use a digital solution to verify vaccination status for anyone who attended.</description></item><item><title>Live snippets for JetBrains IDEs</title><link>https://pedrovhb.com/posts/jetbrains_live_snippets/</link><pubDate>Tue, 27 Jul 2021 13:04:33 -0300</pubDate><author>pedrovhb@gmail.com (Pedro Batista)</author><guid>https://pedrovhb.com/posts/jetbrains_live_snippets/</guid><description>I love JetBrains IDEs. One thing they offer is customizable live snippets. These are dynamic code templates which allow you to input common patterns quickly. It&amp;rsquo;s not just copy-pasting a set of templates; they can do things like position the caret automatically at relevant points in the snippet and dynamically insert things like the current file name or line number, or the date and time.
I&amp;rsquo;ll try to keep this blog post updated as I create more live templates.</description></item><item><title>Recursively deleting all protected related objects in Django</title><link>https://pedrovhb.com/posts/django_recursive_delete_related/</link><pubDate>Fri, 09 Jul 2021 10:48:12 -0300</pubDate><author>pedrovhb@gmail.com (Pedro Batista)</author><guid>https://pedrovhb.com/posts/django_recursive_delete_related/</guid><description>When debugging Django applications, it&amp;rsquo;s often useful to delete objects so that you can try the thing you&amp;rsquo;re working on again and recreate them. This isn&amp;rsquo;t always trivial though, because related objects that have on_delete=PROTECT can prevent you from doing so.
This is a great safeguard when the application is running in production, but not so much when you know what you&amp;rsquo;re doing and just want to test something in your own environment.</description></item><item><title>Fast reshaping with iterators</title><link>https://pedrovhb.com/posts/fast_reshaping_with_iterators/</link><pubDate>Mon, 05 Jul 2021 15:04:32 -0300</pubDate><author>pedrovhb@gmail.com (Pedro Batista)</author><guid>https://pedrovhb.com/posts/fast_reshaping_with_iterators/</guid><description>Lately I&amp;rsquo;ve been reading up a bit more on functional programming. I feel that after years of knowing about the existence of the paradigm and even trying to dip my toes in a couple of times without success, now it finally &amp;ldquo;clicked&amp;rdquo;.
I&amp;rsquo;m still playing around with concepts and languages, and trying to look at some programming exercises in a more functional light. It was surprising to me, though, how easily and efficiently I was able to solve today&amp;rsquo;s LeetCode challenge .</description></item><item><title>Probabilistic data structures - bloom filters</title><link>https://pedrovhb.com/posts/probabilistic_data_structures/</link><pubDate>Sun, 20 Jun 2021 17:24:16 -0300</pubDate><author>pedrovhb@gmail.com (Pedro Batista)</author><guid>https://pedrovhb.com/posts/probabilistic_data_structures/</guid><description>Traditionally in programming we think about 0s and 1s as being infallible. They either are, or aren&amp;rsquo;t, and other than for cosmic rays flipping bits in RAM (it happens) there&amp;rsquo;s not much margin for uncertainty. It&amp;rsquo;s one of the nice things about computers: our memory is imperfect, but theirs isn&amp;rsquo;t.
What if we could trade off a bit of this consistency for a lot of performance, though? Well, it turns out that we sometimes can, by using probabilistic data structures.</description></item><item><title>About</title><link>https://pedrovhb.com/page/about/</link><pubDate>Sun, 06 Jun 2021 18:46:53 -0300</pubDate><author>pedrovhb@gmail.com (Pedro Batista)</author><guid>https://pedrovhb.com/page/about/</guid><description>Pedro Batista software developer Hi! I&amp;rsquo;m Pedro, and I&amp;rsquo;m a mechatronics engineer. I love to code, so I work with (and write about) software development.
In this website I&amp;rsquo;ll be sharing some of my thoughts and notes in the form of blog posts and quick gists. I also like making tools for myself, and I&amp;rsquo;ll be making some of those public too.
Besides programming, I also enjoy photography and motorsports. Unfortunately my F1 career is looking somewhat less promising thus far, so I&amp;rsquo;ll continue to focus on the coding :)</description></item></channel></rss>